# docker-compose -f docker-compose.dev.yml up -d

services:
  # === Database ===
  postgres:
    image: postgres:16-alpine
    container_name: postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # === Directus ===
  directus:
    image: directus/directus:latest
    container_name: directus-dev
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./directus/directus/uploads:/directus/uploads
      - ./directus/directus/extensions:/directus/extensions
      - ./directus/directus/migrations:/directus/migrations
    environment:
      # Переопределяем переменные специфичные для Directus
      KEY: ${DIRECTUS_KEY}
      SECRET: ${DIRECTUS_SECRET}
      PORT: ${DIRECTUS_PORT}
      DB_CLIENT: pg
      DB_HOST: postgres      # внутри Docker сети
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_NAME}
    ports:
      - "8055:8055"

networks:
  app-net:
    driver: bridge